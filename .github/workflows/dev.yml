# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        node-version: [ 22.x]

    steps:
    - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ 2️⃣ Setup Node.js
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          
      - name: Create .env file
        run: |
          touch .env
          echo "NEXT_PUBLIC_API_URL=${{ secrets.API_URL }}" >> .env
          echo "APP_ID=${{ secrets.APP_ID }}" >> .env
          echo "NEXT_PUBLIC_APPLE_ID=${{ secrets.NEXT_PUBLIC_APPLE_ID }}" >> .env
          echo "NEXT_PUBLIC_APP_SHORT_NAME=${{ secrets.NEXT_PUBLIC_APP_SHORT_NAME }}" >> .env
          echo "NEXT_PUBLIC_GOOGLE_ID=${{ secrets.NEXT_PUBLIC_GOOGLE_ID }}" >> .env
          echo "NEXT_PUBLIC_SECRET_KEY=${{ secrets.NEXT_PUBLIC_SECRET_KEY }}" >> .env
          echo "AUTH_TRUST_HOST=${{ secrets.API_URL }}" >> .env
          cat .env
      - name: Set Docker Image Name
        run: |
                  echo "IMAGE_URL=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}" >> $GITHUB_ENV
                  echo "IMAGE_URL_LATEST=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest" >> $GITHUB_ENV        

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry (GHCR)
        if: success()
        uses: docker/login-action@v3
        with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GH_TOKEN }}      

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/my-app:latest
          build-args: |
            ENV_FILE=.env

      # ✅ 6️⃣ Deploy lên Production Server
      - name: Deploy to Production Server
        run: echo "Deploying to Production Server..."
